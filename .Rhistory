renv::init()
install.packages("renv")
renv::init()
renv::update()
renv::update()
library("rethinking") #masks LOO, stancode, WAIC from brms; map from purrr
library("tidyverse") ; theme_set(theme_classic())
library("rlang") #for using {{}} to integrate dplyr with ggplot
#library("lubridate")
library("janitor")
library("brms")
library("gridExtra")
library("grid") #for adding title to grid.arrange
#library("rstan") #for plotting posteriors
#library("coda") #for function HPDinterval #masks traceplot for rstan
library("scales") #for ggplot scale fixing
#library("bayesplot") #for bayes ggploting
library("tidybayes") #bayes diagnostics
library("corrplot")
library("dagitty")
library("ggdag")
library("factoextra") #graphing PCAs
library("wordcloud")
#clean up
rm(list = ls())
'%ni%' <- Negate('%in%')
source("./scripts/functions_PABBM.R")
library("rethinking") #masks LOO, stancode, WAIC from brms; map from purrr
library("tidyverse") ; theme_set(theme_classic())
library("rlang") #for using {{}} to integrate dplyr with ggplot
install.packages("tidyverse")
#library("rethinking") #masks LOO, stancode, WAIC from brms; map from purrr
library("tidyverse"); theme_set(theme_classic())
install.packages("textshaping")
renv::install("tidyverse")
#library("rethinking") #masks LOO, stancode, WAIC from brms; map from purrr
library("tidyverse"); theme_set(theme_classic())
library("rlang") #for using {{}} to integrate dplyr with ggplot
#library("lubridate")
library("janitor")
library("bayestestR") #masks hdi from tidybayes, #for posterior playing
library("lubridate")
renv::install("factoextra")
renv::install("ggdag")
library(tidygraph)
renv::install("igraph")
library(igraph)
renv::install("ggdag")
library(ggday)
library(ggdag)
install.packages("ggdag")
install.packages("ggdag")
install.packages("ggraph")
library(tidgygraph)
library(tidygraph)
install.packages(tidygraph)
install.packages("tidygraph")
install.packages("igraph")
library(ggdag)
library(ggdag)
library(pak)
pak::pak("igraph/rigraph")
library(devtools)
pak::pkg_deps_tree("ggdag")
library(tidyr)
devtools::install_github("r-causal/ggdag")
install.packages("igraph", type="binary")
options(
repos = c(
igraph = 'https://igraph.r-universe.dev',
CRAN = 'https://cloud.r-project.org'
)
)
install.packages('igraph')
(60*60)+(18*60)+31
(60*60)+(40*60)+56
(33*60)+54
(48*60)+07
